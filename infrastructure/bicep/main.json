{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.5.1644",
      "templateHash": "16267295726349304264"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "deploymentStage": {
      "type": "string",
      "defaultValue": "all",
      "allowedValues": [
        "foundation",
        "security",
        "ai",
        "apps",
        "all"
      ],
      "metadata": {
        "description": "Deployment stage (foundation, security, ai, apps, all)"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "[format('loan-defenders-{0}-vnet', parameters('environment'))]",
      "metadata": {
        "description": "VNet name"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "VNet address space"
      }
    },
    "containerAppsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/23",
      "metadata": {
        "description": "Container Apps subnet prefix"
      }
    },
    "apimSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "APIM subnet prefix"
      }
    },
    "privateEndpointsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.4.0/24",
      "metadata": {
        "description": "Private Endpoints subnet prefix"
      }
    }
  },
  "variables": {
    "commonTags": {
      "environment": "[parameters('environment')]",
      "project": "loan-defenders",
      "managedBy": "bicep",
      "deploymentStage": "[parameters('deploymentStage')]"
    },
    "deployFoundation": "[or(equals(parameters('deploymentStage'), 'foundation'), equals(parameters('deploymentStage'), 'all'))]",
    "deploySecurity": "[or(equals(parameters('deploymentStage'), 'security'), equals(parameters('deploymentStage'), 'all'))]",
    "deployAI": "[or(equals(parameters('deploymentStage'), 'ai'), equals(parameters('deploymentStage'), 'all'))]",
    "deployApps": "[or(equals(parameters('deploymentStage'), 'apps'), equals(parameters('deploymentStage'), 'all'))]"
  },
  "resources": {
    "existingVnet": {
      "condition": "[and(not(variables('deployFoundation')), variables('deploySecurity'))]",
      "existing": true,
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[parameters('vnetName')]"
    },
    "existingVnetForAI": {
      "condition": "[and(not(variables('deployFoundation')), variables('deployAI'))]",
      "existing": true,
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[parameters('vnetName')]"
    },
    "existingManagedIdentity": {
      "condition": "[and(not(variables('deploySecurity')), variables('deployAI'))]",
      "existing": true,
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('loan-defenders-{0}-id', parameters('environment'))]"
    },
    "existingVnetForApps": {
      "condition": "[and(not(variables('deployFoundation')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[parameters('vnetName')]"
    },
    "existingLogAnalytics": {
      "condition": "[and(not(variables('deployAI')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('loan-defenders-{0}-logs', parameters('environment'))]"
    },
    "existingAppInsights": {
      "condition": "[and(not(variables('deployAI')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('loan-defenders-{0}-appinsights', parameters('environment'))]"
    },
    "existingManagedIdentityForApps": {
      "condition": "[and(not(variables('deploySecurity')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('loan-defenders-{0}-id', parameters('environment'))]"
    },
    "existingKeyVault": {
      "condition": "[and(not(variables('deploySecurity')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('loan-defenders-{0}-kv', parameters('environment'))]"
    },
    "existingAIProject": {
      "condition": "[and(not(variables('deployAI')), variables('deployApps'))]",
      "existing": true,
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-04-01",
      "name": "[format('loan-defenders-{0}-aiproject', parameters('environment'))]"
    },
    "foundation": {
      "condition": "[variables('deployFoundation')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "foundation-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "containerAppsSubnetPrefix": {
            "value": "[parameters('containerAppsSubnetPrefix')]"
          },
          "apimSubnetPrefix": {
            "value": "[parameters('apimSubnetPrefix')]"
          },
          "privateEndpointsSubnetPrefix": {
            "value": "[parameters('privateEndpointsSubnetPrefix')]"
          },
          "deployPrivateEndpoints": {
            "value": false
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.5.1644",
              "templateHash": "6460078618435337332"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "staging",
                "prod"
              ],
              "metadata": {
                "description": "Environment name (dev, staging, prod)"
              }
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "VNet name"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "VNet address space"
              }
            },
            "containerAppsSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.1.0/23",
              "metadata": {
                "description": "Container Apps subnet prefix"
              }
            },
            "apimSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.3.0/24",
              "metadata": {
                "description": "APIM subnet prefix"
              }
            },
            "privateEndpointsSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.4.0/24",
              "metadata": {
                "description": "Private Endpoints subnet prefix"
              }
            },
            "deployPrivateEndpoints": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Deploy private endpoints (set to false until Azure services exist)"
              }
            },
            "keyVaultId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Key Vault resource ID (optional)"
              }
            },
            "storageAccountId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Storage Account resource ID (optional)"
              }
            },
            "aiServicesId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "AI Services resource ID (optional)"
              }
            },
            "appInsightsId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Application Insights resource ID (optional)"
              }
            },
            "aiFoundryProjectId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Azure AI Foundry Project resource ID (optional)"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags for resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2025-04-01",
              "name": "vnet-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "vnetAddressPrefix": {
                    "value": "[parameters('vnetAddressPrefix')]"
                  },
                  "containerAppsSubnetPrefix": {
                    "value": "[parameters('containerAppsSubnetPrefix')]"
                  },
                  "apimSubnetPrefix": {
                    "value": "[parameters('apimSubnetPrefix')]"
                  },
                  "privateEndpointsSubnetPrefix": {
                    "value": "[parameters('privateEndpointsSubnetPrefix')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.38.5.1644",
                      "templateHash": "2787428142022774963"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region for resources"
                      }
                    },
                    "vnetName": {
                      "type": "string",
                      "defaultValue": "loan-defenders-vnet",
                      "metadata": {
                        "description": "VNet name"
                      }
                    },
                    "vnetAddressPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.0.0/16",
                      "metadata": {
                        "description": "VNet address space"
                      }
                    },
                    "containerAppsSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.1.0/23",
                      "metadata": {
                        "description": "Container Apps subnet address prefix"
                      }
                    },
                    "apimSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.3.0/24",
                      "metadata": {
                        "description": "APIM subnet address prefix"
                      }
                    },
                    "privateEndpointsSubnetPrefix": {
                      "type": "string",
                      "defaultValue": "10.0.4.0/24",
                      "metadata": {
                        "description": "Private Endpoints subnet address prefix"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {
                        "environment": "production",
                        "project": "loan-defenders",
                        "managedBy": "bicep"
                      },
                      "metadata": {
                        "description": "Tags for resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}-container-apps-nsg', parameters('vnetName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowAPIMInbound",
                            "properties": {
                              "description": "Allow inbound traffic from APIM subnet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "destinationAddressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInbound",
                            "properties": {
                              "description": "Allow Azure Load Balancer health probes",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 110,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "DenyAllInbound",
                            "properties": {
                              "description": "Deny all other inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 4096,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAzureServicesOutbound",
                            "properties": {
                              "description": "Allow outbound to Azure services (KeyVault, Storage, AI Services)",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "destinationAddressPrefix": "AzureCloud",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "AllowPrivateEndpointsOutbound",
                            "properties": {
                              "description": "Allow outbound to private endpoints subnet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "destinationAddressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 110,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}-apim-nsg', parameters('vnetName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowHTTPSInbound",
                            "properties": {
                              "description": "Allow HTTPS from Internet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "Internet",
                              "destinationAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAPIMManagementInbound",
                            "properties": {
                              "description": "Allow APIM management endpoint",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "3443",
                              "sourceAddressPrefix": "ApiManagement",
                              "destinationAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 110,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInbound",
                            "properties": {
                              "description": "Allow Azure Load Balancer",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 120,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "DenyAllInbound",
                            "properties": {
                              "description": "Deny all other inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 4096,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowContainerAppsOutbound",
                            "properties": {
                              "description": "Allow outbound to Container Apps subnet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "destinationAddressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Outbound"
                            }
                          },
                          {
                            "name": "AllowAzureServicesOutbound",
                            "properties": {
                              "description": "Allow outbound to Azure services",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "destinationAddressPrefix": "AzureCloud",
                              "access": "Allow",
                              "priority": 110,
                              "direction": "Outbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}-private-endpoints-nsg', parameters('vnetName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowContainerAppsInbound",
                            "properties": {
                              "description": "Allow inbound from Container Apps subnet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "destinationAddressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "AllowAPIMInbound",
                            "properties": {
                              "description": "Allow inbound from APIM subnet",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "443",
                              "sourceAddressPrefix": "[parameters('apimSubnetPrefix')]",
                              "destinationAddressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
                              "access": "Allow",
                              "priority": 110,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "DenyAllInbound",
                            "properties": {
                              "description": "Deny all other inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 4096,
                              "direction": "Inbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('vnetName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressPrefix')]"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "container-apps-subnet",
                            "properties": {
                              "addressPrefix": "[parameters('containerAppsSubnetPrefix')]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-container-apps-nsg', parameters('vnetName')))]"
                              },
                              "delegations": [
                                {
                                  "name": "Microsoft.App.environments",
                                  "properties": {
                                    "serviceName": "Microsoft.App/environments"
                                  }
                                }
                              ],
                              "serviceEndpoints": [],
                              "privateEndpointNetworkPolicies": "Enabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "apim-subnet",
                            "properties": {
                              "addressPrefix": "[parameters('apimSubnetPrefix')]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]"
                              },
                              "delegations": [],
                              "serviceEndpoints": [],
                              "privateEndpointNetworkPolicies": "Enabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          },
                          {
                            "name": "private-endpoints-subnet",
                            "properties": {
                              "addressPrefix": "[parameters('privateEndpointsSubnetPrefix')]",
                              "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-private-endpoints-nsg', parameters('vnetName')))]"
                              },
                              "delegations": [],
                              "serviceEndpoints": [],
                              "privateEndpointNetworkPolicies": "Disabled",
                              "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-container-apps-nsg', parameters('vnetName')))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-private-endpoints-nsg', parameters('vnetName')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                    },
                    "vnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet name"
                      },
                      "value": "[parameters('vnetName')]"
                    },
                    "containerAppsSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Container Apps subnet ID"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[0].id]"
                    },
                    "apimSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "APIM subnet ID"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[1].id]"
                    },
                    "privateEndpointsSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Private Endpoints subnet ID"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[2].id]"
                    },
                    "containerAppsSubnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Container Apps subnet name"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[0].name]"
                    },
                    "apimSubnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "APIM subnet name"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[1].name]"
                    },
                    "privateEndpointsSubnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "Private Endpoints subnet name"
                      },
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[2].name]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2025-04-01",
              "name": "private-dns-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.vnetId.value]"
                  },
                  "vnetName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.vnetName.value]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.38.5.1644",
                      "templateHash": "1004000666444166716"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet resource ID to link DNS zones to"
                      }
                    },
                    "vnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet name for link naming"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {
                        "environment": "production",
                        "project": "loan-defenders",
                        "managedBy": "bicep"
                      },
                      "metadata": {
                        "description": "Tags for resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.vaultcore.azure.net",
                      "location": "global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.blob.core.windows.net",
                      "location": "global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.cognitiveservices.azure.com",
                      "location": "global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.monitor.azure.com",
                      "location": "global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.api.azureml.ms",
                      "location": "global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.vaultcore.azure.net', format('{0}-keyvault-link', parameters('vnetName')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.blob.core.windows.net', format('{0}-blob-link', parameters('vnetName')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.cognitiveservices.azure.com', format('{0}-aiservices-link', parameters('vnetName')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.cognitiveservices.azure.com')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.monitor.azure.com', format('{0}-monitor-link', parameters('vnetName')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.api.azureml.ms', format('{0}-aifoundry-link', parameters('vnetName')))]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyVaultDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault DNS Zone resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]"
                    },
                    "blobDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Blob Storage DNS Zone resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
                    },
                    "aiServicesDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "AI Services DNS Zone resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.cognitiveservices.azure.com')]"
                    },
                    "monitorDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Monitor DNS Zone resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]"
                    },
                    "aiFoundryDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure AI Foundry DNS Zone resource ID"
                      },
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')]"
                    },
                    "keyVaultDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault DNS Zone name"
                      },
                      "value": "privatelink.vaultcore.azure.net"
                    },
                    "blobDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Blob Storage DNS Zone name"
                      },
                      "value": "privatelink.blob.core.windows.net"
                    },
                    "aiServicesDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "AI Services DNS Zone name"
                      },
                      "value": "privatelink.cognitiveservices.azure.com"
                    },
                    "monitorDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Monitor DNS Zone name"
                      },
                      "value": "privatelink.monitor.azure.com"
                    },
                    "aiFoundryDnsZoneName": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure AI Foundry DNS Zone name"
                      },
                      "value": "privatelink.api.azureml.ms"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
              ]
            },
            {
              "condition": "[parameters('deployPrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2025-04-01",
              "name": "private-endpoints-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "privateEndpointsSubnetId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.privateEndpointsSubnetId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "keyVaultId": {
                    "value": "[parameters('keyVaultId')]"
                  },
                  "storageAccountId": {
                    "value": "[parameters('storageAccountId')]"
                  },
                  "aiServicesId": {
                    "value": "[parameters('aiServicesId')]"
                  },
                  "appInsightsId": {
                    "value": "[parameters('appInsightsId')]"
                  },
                  "aiFoundryProjectId": {
                    "value": "[parameters('aiFoundryProjectId')]"
                  },
                  "keyVaultDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.keyVaultDnsZoneId.value]"
                  },
                  "blobDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.blobDnsZoneId.value]"
                  },
                  "aiServicesDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.aiServicesDnsZoneId.value]"
                  },
                  "monitorDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.monitorDnsZoneId.value]"
                  },
                  "aiFoundryDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.aiFoundryDnsZoneId.value]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.38.5.1644",
                      "templateHash": "13311437667238631633"
                    }
                  },
                  "parameters": {
                    "privateEndpointsSubnetId": {
                      "type": "string",
                      "metadata": {
                        "description": "Private Endpoints subnet ID"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Azure region for resources"
                      }
                    },
                    "keyVaultId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Key Vault resource ID (if exists)"
                      }
                    },
                    "storageAccountId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Storage Account resource ID (if exists)"
                      }
                    },
                    "aiServicesId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "AI Services resource ID (if exists)"
                      }
                    },
                    "appInsightsId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Application Insights resource ID (if exists)"
                      }
                    },
                    "aiFoundryProjectId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Azure AI Foundry Project resource ID (if exists)"
                      }
                    },
                    "keyVaultDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault DNS Zone ID"
                      }
                    },
                    "blobDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Blob Storage DNS Zone ID"
                      }
                    },
                    "aiServicesDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "AI Services DNS Zone ID"
                      }
                    },
                    "monitorDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Monitor DNS Zone ID"
                      }
                    },
                    "aiFoundryDnsZoneId": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure AI Foundry DNS Zone ID"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {
                        "environment": "production",
                        "project": "loan-defenders",
                        "managedBy": "bicep"
                      },
                      "metadata": {
                        "description": "Tags for resources"
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('keyVaultId')))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-05-01",
                      "name": "loan-defenders-kv-pe",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointsSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "kv-pe-connection",
                            "properties": {
                              "privateLinkServiceId": "[parameters('keyVaultId')]",
                              "groupIds": [
                                "vault"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('keyVaultId')))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', 'loan-defenders-kv-pe', 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-vaultcore-azure-net",
                            "properties": {
                              "privateDnsZoneId": "[parameters('keyVaultDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-kv-pe')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('storageAccountId')))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-05-01",
                      "name": "loan-defenders-blob-pe",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointsSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "blob-pe-connection",
                            "properties": {
                              "privateLinkServiceId": "[parameters('storageAccountId')]",
                              "groupIds": [
                                "blob"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('storageAccountId')))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', 'loan-defenders-blob-pe', 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-blob-core-windows-net",
                            "properties": {
                              "privateDnsZoneId": "[parameters('blobDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-blob-pe')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('aiServicesId')))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-05-01",
                      "name": "loan-defenders-ai-pe",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointsSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "ai-pe-connection",
                            "properties": {
                              "privateLinkServiceId": "[parameters('aiServicesId')]",
                              "groupIds": [
                                "account"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('aiServicesId')))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', 'loan-defenders-ai-pe', 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-cognitiveservices-azure-com",
                            "properties": {
                              "privateDnsZoneId": "[parameters('aiServicesDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-ai-pe')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('appInsightsId')))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-05-01",
                      "name": "loan-defenders-appinsights-pe",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointsSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "appinsights-pe-connection",
                            "properties": {
                              "privateLinkServiceId": "[parameters('appInsightsId')]",
                              "groupIds": [
                                "azuremonitor"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('appInsightsId')))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', 'loan-defenders-appinsights-pe', 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-monitor-azure-com",
                            "properties": {
                              "privateDnsZoneId": "[parameters('monitorDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-appinsights-pe')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('aiFoundryProjectId')))]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2023-05-01",
                      "name": "loan-defenders-aifoundry-pe",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointsSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "aifoundry-pe-connection",
                            "properties": {
                              "privateLinkServiceId": "[parameters('aiFoundryProjectId')]",
                              "groupIds": [
                                "amlworkspace"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('aiFoundryProjectId')))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', 'loan-defenders-aifoundry-pe', 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-api-azureml-ms",
                            "properties": {
                              "privateDnsZoneId": "[parameters('aiFoundryDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-aifoundry-pe')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyVaultPrivateEndpointId": {
                      "type": "string",
                      "metadata": {
                        "description": "Key Vault Private Endpoint ID"
                      },
                      "value": "[if(not(empty(parameters('keyVaultId'))), resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-kv-pe'), '')]"
                    },
                    "blobPrivateEndpointId": {
                      "type": "string",
                      "metadata": {
                        "description": "Blob Storage Private Endpoint ID"
                      },
                      "value": "[if(not(empty(parameters('storageAccountId'))), resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-blob-pe'), '')]"
                    },
                    "aiServicesPrivateEndpointId": {
                      "type": "string",
                      "metadata": {
                        "description": "AI Services Private Endpoint ID"
                      },
                      "value": "[if(not(empty(parameters('aiServicesId'))), resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-ai-pe'), '')]"
                    },
                    "appInsightsPrivateEndpointId": {
                      "type": "string",
                      "metadata": {
                        "description": "Application Insights Private Endpoint ID"
                      },
                      "value": "[if(not(empty(parameters('appInsightsId'))), resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-appinsights-pe'), '')]"
                    },
                    "aiFoundryPrivateEndpointId": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure AI Foundry Project Private Endpoint ID"
                      },
                      "value": "[if(not(empty(parameters('aiFoundryProjectId'))), resourceId('Microsoft.Network/privateEndpoints', 'loan-defenders-aifoundry-pe'), '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'private-dns-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "VNet resource ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.vnetId.value]"
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "VNet name"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.vnetName.value]"
            },
            "containerAppsSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps subnet ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.containerAppsSubnetId.value]"
            },
            "apimSubnetId": {
              "type": "string",
              "metadata": {
                "description": "APIM subnet ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.apimSubnetId.value]"
            },
            "privateEndpointsSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Private Endpoints subnet ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2025-04-01').outputs.privateEndpointsSubnetId.value]"
            },
            "keyVaultDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault DNS Zone ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.keyVaultDnsZoneId.value]"
            },
            "blobDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Blob Storage DNS Zone ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.blobDnsZoneId.value]"
            },
            "aiServicesDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "AI Services DNS Zone ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.aiServicesDnsZoneId.value]"
            },
            "monitorDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Monitor DNS Zone ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.monitorDnsZoneId.value]"
            },
            "aiFoundryDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Azure AI Foundry DNS Zone ID"
              },
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'private-dns-deployment'), '2025-04-01').outputs.aiFoundryDnsZoneId.value]"
            },
            "privateEndpointsDeployed": {
              "type": "bool",
              "metadata": {
                "description": "Private endpoints deployed"
              },
              "value": "[parameters('deployPrivateEndpoints')]"
            },
            "deploymentComplete": {
              "type": "bool",
              "metadata": {
                "description": "Foundation deployment complete"
              },
              "value": true
            }
          }
        }
      }
    },
    "security": {
      "condition": "[variables('deploySecurity')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "security-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "vnetId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.vnetId.value), createObject('value', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))))]",
          "privateEndpointsSubnetId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.privateEndpointsSubnetId.value), createObject('value', reference('existingVnet').subnets[2].id))]",
          "keyVaultDnsZoneId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.keyVaultDnsZoneId.value), createObject('value', resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')))]",
          "blobDnsZoneId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.blobDnsZoneId.value), createObject('value', resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')))]",
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.5.1644",
              "templateHash": "13242151520877162816"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "staging",
                "prod"
              ],
              "metadata": {
                "description": "Environment name (dev, staging, prod)"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "VNet resource ID (from foundation stage)"
              }
            },
            "privateEndpointsSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Private Endpoints subnet ID (from foundation stage)"
              }
            },
            "keyVaultDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault DNS Zone ID (from foundation stage)"
              }
            },
            "blobDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Blob Storage DNS Zone ID (from foundation stage)"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags for resources"
              }
            }
          },
          "variables": {
            "keyVaultName": "[format('loan-defenders-{0}-kv', parameters('environment'))]",
            "storageAccountName": "[format('loandefenders{0}sa', parameters('environment'))]",
            "managedIdentityName": "[format('loan-defenders-{0}-id', parameters('environment'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[variables('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[variables('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": true,
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), 'Key Vault Secrets User')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'loan-documents')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), 'Storage Blob Data Contributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-pe', variables('keyVaultName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointsSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "kv-pe-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-pe', variables('keyVaultName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-vaultcore-azure-net",
                    "properties": {
                      "privateDnsZoneId": "[parameters('keyVaultDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', variables('keyVaultName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-blob-pe', variables('storageAccountName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointsSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "blob-pe-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-blob-pe', variables('storageAccountName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-blob-core-windows-net",
                    "properties": {
                      "privateDnsZoneId": "[parameters('blobDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-blob-pe', variables('storageAccountName')))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID"
              },
              "value": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name"
              },
              "value": "[variables('keyVaultName')]"
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "Key Vault URI"
              },
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri]"
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Storage Account resource ID"
              },
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage Account name"
              },
              "value": "[variables('storageAccountName')]"
            },
            "blobEndpoint": {
              "type": "string",
              "metadata": {
                "description": "Blob endpoint"
              },
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').primaryEndpoints.blob]"
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity resource ID"
              },
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity client ID"
              },
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').clientId]"
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity principal ID"
              },
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]"
            },
            "deploymentComplete": {
              "type": "bool",
              "metadata": {
                "description": "Security deployment complete"
              },
              "value": true
            }
          }
        }
      },
      "dependsOn": [
        "existingVnet",
        "foundation"
      ]
    },
    "ai": {
      "condition": "[variables('deployAI')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "ai-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "privateEndpointsSubnetId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.privateEndpointsSubnetId.value), createObject('value', reference('existingVnetForAI').subnets[2].id))]",
          "aiServicesDnsZoneId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.aiServicesDnsZoneId.value), createObject('value', resourceId('Microsoft.Network/privateDnsZones', 'privatelink.cognitiveservices.azure.com')))]",
          "monitorDnsZoneId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.monitorDnsZoneId.value), createObject('value', resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')))]",
          "aiFoundryDnsZoneId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.aiFoundryDnsZoneId.value), createObject('value', resourceId('Microsoft.Network/privateDnsZones', 'privatelink.api.azureml.ms')))]",
          "managedIdentityPrincipalId": "[if(variables('deploySecurity'), createObject('value', reference('security').outputs.managedIdentityPrincipalId.value), createObject('value', reference('existingManagedIdentity').principalId))]",
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.5.1644",
              "templateHash": "10843652868965822174"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "staging",
                "prod"
              ],
              "metadata": {
                "description": "Environment name (dev, staging, prod)"
              }
            },
            "privateEndpointsSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Private Endpoints subnet ID (from foundation stage)"
              }
            },
            "aiServicesDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "AI Services DNS Zone ID (from foundation stage)"
              }
            },
            "monitorDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Monitor DNS Zone ID (from foundation stage)"
              }
            },
            "aiFoundryDnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "Azure AI Foundry DNS Zone ID (from foundation stage)"
              }
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity principal ID (from security stage)"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags for resources"
              }
            }
          },
          "variables": {
            "aiServicesName": "[format('loan-defenders-{0}-ai', parameters('environment'))]",
            "logAnalyticsName": "[format('loan-defenders-{0}-logs', parameters('environment'))]",
            "appInsightsName": "[format('loan-defenders-{0}-appinsights', parameters('environment'))]",
            "aiFoundryHubName": "[format('loan-defenders-{0}-aihub', parameters('environment'))]",
            "aiFoundryProjectName": "[format('loan-defenders-{0}-aiproject', parameters('environment'))]"
          },
          "resources": {
            "logAnalytics": {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[variables('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            "appInsights": {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "logAnalytics"
              ]
            },
            "aiServices": {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-10-01-preview",
              "name": "[variables('aiServicesName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "CognitiveServices",
              "sku": {
                "name": "S0"
              },
              "properties": {
                "customSubDomainName": "[variables('aiServicesName')]",
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            "aiServicesUser": {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiServicesName'))]",
              "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), parameters('managedIdentityPrincipalId'), 'Cognitive Services User')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "aiServices"
              ]
            },
            "aiFoundryHub": {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[variables('aiFoundryHubName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "hub",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "Loan Defenders AI Hub",
                "description": "AI Foundry Hub for Loan Defenders multi-agent system",
                "publicNetworkAccess": "Disabled"
              }
            },
            "aiFoundryProject": {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[variables('aiFoundryProjectName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "project",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "Loan Defenders AI Project",
                "description": "AI Foundry Project for Loan Defenders agents with GPT-4",
                "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiFoundryHubName'))]",
                "publicNetworkAccess": "Disabled"
              },
              "dependsOn": [
                "aiFoundryHub"
              ]
            },
            "aiFoundryContributor": {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.MachineLearningServices/workspaces/{0}', variables('aiFoundryProjectName'))]",
              "name": "[guid(resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiFoundryProjectName')), parameters('managedIdentityPrincipalId'), 'AzureML Data Scientist')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f6c7c914-8db3-469d-8ca1-694a8f32e121')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "aiFoundryProject"
              ]
            },
            "aiServicesPrivateEndpoint": {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-pe', variables('aiServicesName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointsSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "ai-pe-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "aiServices"
              ]
            },
            "aiServicesDnsZoneGroup": {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-pe', variables('aiServicesName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-cognitiveservices-azure-com",
                    "properties": {
                      "privateDnsZoneId": "[parameters('aiServicesDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "aiServicesPrivateEndpoint"
              ]
            },
            "appInsightsPrivateEndpoint": {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-pe', variables('appInsightsName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointsSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "appinsights-pe-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                      "groupIds": [
                        "azuremonitor"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "appInsights"
              ]
            },
            "appInsightsDnsZoneGroup": {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-pe', variables('appInsightsName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-monitor-azure-com",
                    "properties": {
                      "privateDnsZoneId": "[parameters('monitorDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "appInsightsPrivateEndpoint"
              ]
            },
            "aiFoundryPrivateEndpoint": {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}-pe', variables('aiFoundryProjectName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointsSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "aifoundry-pe-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiFoundryProjectName'))]",
                      "groupIds": [
                        "amlworkspace"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "aiFoundryProject"
              ]
            },
            "aiFoundryDnsZoneGroup": {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-pe', variables('aiFoundryProjectName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-api-azureml-ms",
                    "properties": {
                      "privateDnsZoneId": "[parameters('aiFoundryDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "aiFoundryPrivateEndpoint"
              ]
            }
          },
          "outputs": {
            "aiServicesId": {
              "type": "string",
              "metadata": {
                "description": "AI Services resource ID"
              },
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
            },
            "aiServicesName": {
              "type": "string",
              "metadata": {
                "description": "AI Services name"
              },
              "value": "[variables('aiServicesName')]"
            },
            "aiServicesEndpoint": {
              "type": "string",
              "metadata": {
                "description": "AI Services endpoint"
              },
              "value": "[reference('aiServices').endpoint]"
            },
            "appInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Application Insights resource ID"
              },
              "value": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            },
            "appInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights name"
              },
              "value": "[variables('appInsightsName')]"
            },
            "appInsightsInstrumentationKey": {
              "type": "securestring",
              "metadata": {
                "description": "Application Insights instrumentation key"
              },
              "value": "[reference('appInsights').InstrumentationKey]"
            },
            "appInsightsConnectionString": {
              "type": "securestring",
              "metadata": {
                "description": "Application Insights connection string"
              },
              "value": "[reference('appInsights').ConnectionString]"
            },
            "logAnalyticsId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace ID"
              },
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
            },
            "logAnalyticsName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace name"
              },
              "value": "[variables('logAnalyticsName')]"
            },
            "aiFoundryHubId": {
              "type": "string",
              "metadata": {
                "description": "AI Foundry Hub resource ID"
              },
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiFoundryHubName'))]"
            },
            "aiFoundryHubName": {
              "type": "string",
              "metadata": {
                "description": "AI Foundry Hub name"
              },
              "value": "[variables('aiFoundryHubName')]"
            },
            "aiFoundryProjectId": {
              "type": "string",
              "metadata": {
                "description": "AI Foundry Project resource ID"
              },
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiFoundryProjectName'))]"
            },
            "aiFoundryProjectName": {
              "type": "string",
              "metadata": {
                "description": "AI Foundry Project name"
              },
              "value": "[variables('aiFoundryProjectName')]"
            },
            "deploymentComplete": {
              "type": "bool",
              "metadata": {
                "description": "AI deployment complete"
              },
              "value": true
            }
          }
        }
      },
      "dependsOn": [
        "existingManagedIdentity",
        "existingVnetForAI",
        "foundation",
        "security"
      ]
    },
    "apps": {
      "condition": "[variables('deployApps')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "apps-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "containerAppsSubnetId": "[if(variables('deployFoundation'), createObject('value', reference('foundation').outputs.containerAppsSubnetId.value), createObject('value', reference('existingVnetForApps').subnets[0].id))]",
          "logAnalyticsId": "[if(variables('deployAI'), createObject('value', reference('ai').outputs.logAnalyticsId.value), createObject('value', resourceId('Microsoft.OperationalInsights/workspaces', format('loan-defenders-{0}-logs', parameters('environment')))))]",
          "appInsightsConnectionString": "[if(variables('deployAI'), createObject('value', listOutputsWithSecureValues('ai', '2025-04-01').appInsightsConnectionString), createObject('value', reference('existingAppInsights').ConnectionString))]",
          "managedIdentityId": "[if(variables('deploySecurity'), createObject('value', reference('security').outputs.managedIdentityId.value), createObject('value', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('loan-defenders-{0}-id', parameters('environment')))))]",
          "keyVaultUri": "[if(variables('deploySecurity'), createObject('value', reference('security').outputs.keyVaultUri.value), createObject('value', reference('existingKeyVault').vaultUri))]",
          "aiFoundryProjectEndpoint": "[if(variables('deployAI'), createObject('value', format('https://{0}.api.azureml.ms', reference('ai').outputs.aiFoundryProjectName.value)), createObject('value', format('https://{0}.api.azureml.ms', format('loan-defenders-{0}-aiproject', parameters('environment')))))]",
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.5.1644",
              "templateHash": "14780885650784729887"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "environment": {
              "type": "string",
              "allowedValues": [
                "dev",
                "staging",
                "prod"
              ],
              "metadata": {
                "description": "Environment name (dev, staging, prod)"
              }
            },
            "containerAppsSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps subnet ID (from foundation stage)"
              }
            },
            "logAnalyticsId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace ID (from AI stage)"
              }
            },
            "appInsightsConnectionString": {
              "type": "securestring",
              "metadata": {
                "description": "Application Insights connection string (from AI stage)"
              }
            },
            "managedIdentityId": {
              "type": "string",
              "metadata": {
                "description": "Managed Identity resource ID (from security stage)"
              }
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "Key Vault URI (from security stage)"
              }
            },
            "aiFoundryProjectEndpoint": {
              "type": "string",
              "metadata": {
                "description": "AI Foundry Project endpoint (from AI stage)"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags for resources"
              }
            }
          },
          "variables": {
            "containerAppsEnvName": "[format('loan-defenders-{0}-env', parameters('environment'))]",
            "apiAppName": "[format('loan-defenders-{0}-api', parameters('environment'))]",
            "uiAppName": "[format('loan-defenders-{0}-ui', parameters('environment'))]",
            "mcpApplicationVerificationAppName": "[format('loan-defenders-{0}-mcp-appverif', parameters('environment'))]",
            "mcpDocumentProcessingAppName": "[format('loan-defenders-{0}-mcp-docproc', parameters('environment'))]",
            "mcpFinancialCalcAppName": "[format('loan-defenders-{0}-mcp-fincalc', parameters('environment'))]",
            "apiImage": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
            "uiImage": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
            "mcpImage": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-03-01",
              "name": "[variables('containerAppsEnvName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[parameters('containerAppsSubnetId')]",
                  "internal": true
                },
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(parameters('logAnalyticsId'), '2023-09-01').customerId]",
                    "sharedKey": "[listKeys(parameters('logAnalyticsId'), '2023-09-01').primarySharedKey]"
                  }
                },
                "zoneRedundant": false
              }
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('apiAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 8000,
                    "transport": "http",
                    "allowInsecure": false
                  },
                  "secrets": [
                    {
                      "name": "appinsights-connection-string",
                      "value": "[parameters('appInsightsConnectionString')]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "name": "api",
                      "image": "[variables('apiImage')]",
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1Gi"
                      },
                      "env": [
                        {
                          "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                          "secretRef": "appinsights-connection-string"
                        },
                        {
                          "name": "AZURE_KEY_VAULT_URI",
                          "value": "[parameters('keyVaultUri')]"
                        },
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[reference(parameters('managedIdentityId'), '2023-01-31').clientId]"
                        },
                        {
                          "name": "AI_FOUNDRY_PROJECT_ENDPOINT",
                          "value": "[parameters('aiFoundryProjectEndpoint')]"
                        },
                        {
                          "name": "ENVIRONMENT",
                          "value": "[parameters('environment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": "[if(equals(parameters('environment'), 'prod'), 2, 1)]",
                    "maxReplicas": "[if(equals(parameters('environment'), 'prod'), 10, 3)]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('uiAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 3000,
                    "transport": "http",
                    "allowInsecure": false
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "ui",
                      "image": "[variables('uiImage')]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "API_URL",
                          "value": "[format('http://{0}', reference(resourceId('Microsoft.App/containerApps', variables('apiAppName')), '2024-03-01').configuration.ingress.fqdn)]"
                        },
                        {
                          "name": "ENVIRONMENT",
                          "value": "[parameters('environment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": "[if(equals(parameters('environment'), 'prod'), 2, 1)]",
                    "maxReplicas": "[if(equals(parameters('environment'), 'prod'), 5, 2)]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/containerApps', variables('apiAppName'))]",
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('mcpApplicationVerificationAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 8010,
                    "transport": "http",
                    "allowInsecure": false
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "mcp-appverif",
                      "image": "[variables('mcpImage')]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[reference(parameters('managedIdentityId'), '2023-01-31').clientId]"
                        },
                        {
                          "name": "ENVIRONMENT",
                          "value": "[parameters('environment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 3
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('mcpDocumentProcessingAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 8011,
                    "transport": "http",
                    "allowInsecure": false
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "mcp-docproc",
                      "image": "[variables('mcpImage')]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[reference(parameters('managedIdentityId'), '2023-01-31').clientId]"
                        },
                        {
                          "name": "ENVIRONMENT",
                          "value": "[parameters('environment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 3
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('mcpFinancialCalcAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 8012,
                    "transport": "http",
                    "allowInsecure": false
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "mcp-fincalc",
                      "image": "[variables('mcpImage')]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[reference(parameters('managedIdentityId'), '2023-01-31').clientId]"
                        },
                        {
                          "name": "ENVIRONMENT",
                          "value": "[parameters('environment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 3
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppsEnvId": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment resource ID"
              },
              "value": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvName'))]"
            },
            "containerAppsEnvName": {
              "type": "string",
              "metadata": {
                "description": "Container Apps Environment name"
              },
              "value": "[variables('containerAppsEnvName')]"
            },
            "apiAppFqdn": {
              "type": "string",
              "metadata": {
                "description": "API app FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', variables('apiAppName')), '2024-03-01').configuration.ingress.fqdn]"
            },
            "uiAppFqdn": {
              "type": "string",
              "metadata": {
                "description": "UI app FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', variables('uiAppName')), '2024-03-01').configuration.ingress.fqdn]"
            },
            "mcpAppVerifFqdn": {
              "type": "string",
              "metadata": {
                "description": "MCP Application Verification FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', variables('mcpApplicationVerificationAppName')), '2024-03-01').configuration.ingress.fqdn]"
            },
            "mcpDocProcFqdn": {
              "type": "string",
              "metadata": {
                "description": "MCP Document Processing FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', variables('mcpDocumentProcessingAppName')), '2024-03-01').configuration.ingress.fqdn]"
            },
            "mcpFinCalcFqdn": {
              "type": "string",
              "metadata": {
                "description": "MCP Financial Calc FQDN"
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', variables('mcpFinancialCalcAppName')), '2024-03-01').configuration.ingress.fqdn]"
            },
            "deploymentComplete": {
              "type": "bool",
              "metadata": {
                "description": "Apps deployment complete"
              },
              "value": true
            }
          }
        }
      },
      "dependsOn": [
        "ai",
        "existingAppInsights",
        "existingKeyVault",
        "existingVnetForApps",
        "foundation",
        "security"
      ]
    }
  },
  "outputs": {
    "deploymentStage": {
      "type": "string",
      "metadata": {
        "description": "Deployment stage executed"
      },
      "value": "[parameters('deploymentStage')]"
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Environment deployed"
      },
      "value": "[parameters('environment')]"
    },
    "vnetId": {
      "type": "string",
      "metadata": {
        "description": "VNet resource ID"
      },
      "value": "[if(variables('deployFoundation'), reference('foundation').outputs.vnetId.value, '')]"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "VNet name"
      },
      "value": "[if(variables('deployFoundation'), reference('foundation').outputs.vnetName.value, parameters('vnetName'))]"
    },
    "keyVaultUri": {
      "type": "string",
      "metadata": {
        "description": "Key Vault URI"
      },
      "value": "[if(variables('deploySecurity'), reference('security').outputs.keyVaultUri.value, '')]"
    },
    "managedIdentityClientId": {
      "type": "string",
      "metadata": {
        "description": "Managed Identity client ID"
      },
      "value": "[if(variables('deploySecurity'), reference('security').outputs.managedIdentityClientId.value, '')]"
    },
    "appInsightsConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Application Insights connection string"
      },
      "value": "[if(variables('deployAI'), listOutputsWithSecureValues('ai', '2025-04-01').appInsightsConnectionString, '')]"
    },
    "aiFoundryProjectName": {
      "type": "string",
      "metadata": {
        "description": "AI Foundry Project name"
      },
      "value": "[if(variables('deployAI'), reference('ai').outputs.aiFoundryProjectName.value, '')]"
    },
    "apiAppFqdn": {
      "type": "string",
      "metadata": {
        "description": "API app FQDN"
      },
      "value": "[if(variables('deployApps'), reference('apps').outputs.apiAppFqdn.value, '')]"
    },
    "uiAppFqdn": {
      "type": "string",
      "metadata": {
        "description": "UI app FQDN"
      },
      "value": "[if(variables('deployApps'), reference('apps').outputs.uiAppFqdn.value, '')]"
    },
    "deploymentComplete": {
      "type": "bool",
      "metadata": {
        "description": "Deployment complete"
      },
      "value": true
    }
  }
}