[project]
name = "loan-avengers"
version = "0.1.0"
description = "🦸‍♂️ The Loan Avengers - A superhero squad that assembles to make dream loans happen!"
authors = [
    { name = "niksacdev", email = "niksac@microsoft.com" }
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Microsoft Agent Framework with key integrations
    "agent-framework[azure,foundry,viz]",

    # Core business logic dependencies
    "pydantic>=2.5.0", # Data model validation
    "PyYAML>=6.0.0", # Configuration file parsing

    # MCP server dependencies
    "mcp[cli]>=1.12.3", # Model Context Protocol for agent tools
    "uvicorn>=0.35.0", # ASGI server for MCP servers
    "httpx>=0.27.0", # HTTP client for external integrations
    "requests>=2.32.4", # HTTP requests for MCP tools

    # Optional dependencies
    "python-dotenv>=1.0.0", # Environment configuration (optional)
]

[project.optional-dependencies]
# Future AI provider options
openai = [
    "openai>=1.0.0",
]
azure = [
    "azure-monitor-opentelemetry>=1.6.13", # Azure Application Insights integration
    "opentelemetry-instrumentation-logging", # Auto trace context injection
]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pytest-cov>=6.2.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
prerelease = "if-necessary-or-explicit"
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]

[tool.uv.sources]
# Microsoft Agent Framework packages from GitHub (following official documentation format)
"agent-framework" = { git = "https://github.com/microsoft/agent-framework.git", branch = "main", subdirectory = "python/packages/main" }
"agent-framework-azure" = { git = "https://github.com/microsoft/agent-framework.git", branch = "main", subdirectory = "python/packages/azure" }
"agent-framework-foundry" = { git = "https://github.com/microsoft/agent-framework.git", branch = "main", subdirectory = "python/packages/foundry" }

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["loan_avengers"]
known-third-party = ["agents"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.hatch.build.targets.wheel]
packages = ["loan_avengers"]

[tool.hatch.build.targets.sdist]
include = [
  "loan_avengers",
  "README.md",
  "LICENSE",
  "agent-persona",
  "docs",
  "pyproject.toml",
]
